@page "/categoria/modificar/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Modificar Categoria</MudText>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <EditForm Model="cat" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Nombre" @bind-Value="cat.Nombre" For="@(() => cat.Nombre)" />
                        <MudDivider />
                        
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Guardar cambios</MudButton>
                    </MudCardActions>
                </MudCard>
            </EditForm>
            @if (showLeaveAlert)
            {
<MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(true))">Ocurrió un problema.</MudAlert>}
        </MudPaper>
    </MudItem>
</MudGrid>

@code { [Parameter]
            public int id { get; set; }
            private bool showLeaveAlert = false;
            Categoria cat = new Categoria();

            protected override async Task OnInitializedAsync()
            {
                Http.DefaultRequestHeaders.Authorization =
                    new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));

                var resp = await Http.GetStringAsync("categoria/" + id);
                cat = JsonSerializer.Deserialize<Categoria>(resp, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            }

            private async Task OnValidSubmit(EditContext context)
            {
                await saveChanges();
            }

            private async Task saveChanges()
            {

                var httpResponse = await Http.PutAsJsonAsync<Categoria>("categoria/" + cat.Id, cat);

                if (!(httpResponse.StatusCode == System.Net.HttpStatusCode.OK))
                {
                    showLeaveAlert = true;
                }
                else
                {
                    NavigationManager.NavigateTo("categoria/index");
                }
            }

            private void CloseMe(bool value)
            {
                showLeaveAlert = false;
            } }

